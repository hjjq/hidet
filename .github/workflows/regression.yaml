name: Regression

on:
  workflow_dispatch:
    inputs:
      hardware_config:
        description: 'Hardware Configuration ID(s), comma separated'
        required: true
        default: '2'


jobs:
  start_instances:
    runs-on: ubuntu-latest
    outputs:
      started_instances: ${{ steps.run_py_script.outputs.started_instances }}
      test: ${{ steps.run_py_script.outputs.test }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install mysql-connector-python
      - id: run_py_script
        run: timeout 900 python ./.github/scripts/start_instances.py
        env:
          HW_CONFIG: ${{ inputs.hardware_config }}
          CI_DB_HOSTNAME: ${{ secrets.CI_DB_HOSTNAME }}
          CI_DB_PORT: ${{ secrets.CI_DB_PORT }}
          CI_DB_USERNAME: ${{ secrets.CI_DB_USERNAME }}
          CI_DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      # - run: sleep 20
  stop_instances:
    runs-on: ubuntu-latest
    needs: start_instances
    steps:
      - uses: actions/checkout@v4
      - run: python ./.github/scripts/stop_instances.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          STARTED_INSTANCES: ${{ needs.start_instances.outputs.started_instances }}
          TEST: ${{ needs.start_instances.outputs.test }}